" Vim configuration 
" Based on https://github.com/dougblack/dotfiles/blob/master/.vimrc 

" Misc {{{
set backspace=indent,eol,start
set modeline
set modelines=1
set clipboard=unnamed
" let mapleader = ","
" }}}

" Spaces & Tabs {{{
set tabstop=4           " 4 space tab
set expandtab           " use spaces for tabs
set softtabstop=4       " 4 space tab
set shiftwidth=4
" }}}

" Searching {{{
set path+=**
set ignorecase          " ignore case when searching
set incsearch           " search as characters are entered
set hlsearch            " highlight all matches
" Set cursors for different modes
" let &t_SI = "\<Esc>[6 q"
" let &t_SR = "\<Esc>[4 q"
" let &t_EI = "\<Esc>[2 q"
" Turn off search highlights
nnoremap <leader><space> :nohlsearch<CR>
" }}}

" Folding {{{
set foldmethod=indent   " fold based on indent level
set foldnestmax=10      " max 10 depth
set foldenable          " don't fold files by default on open
nnoremap <space> za
set foldlevelstart=10   " start with fold level of 1
" }}}

" Line Shortcuts {{{
" nnoremap j gj
" nnoremap k gk
" nnoremap gV `[v`]
" }}}

" Backups {{{
set backup
set backupdir=~/.vim/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim/tmp,/var/tmp,/tmp
set writebackup
" }}}

" Plugins {{{
call plug#begin('~/.vim/plugged')
" Color schemes
Plug 'altercation/vim-colors-solarized'
Plug 'kjssad/quantum.vim'

" FZF 
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'preservim/nerdtree'

" Git plugin
Plug 'tpope/vim-fugitive'

" Elixir support
Plug 'elixir-editors/vim-elixir'
Plug 'slashmili/alchemist.vim'

" Database interaction
Plug 'tpope/vim-dadbod'

" VimWiki
Plug 'vimwiki/vimwiki'

call plug#end()
" }}}

" Plugin configuration {{{

" Solarized toggle background
call togglebg#map("<F5>")

" Key bindings for fzf
nmap ; :Buffers<CR>
nmap <Leader>t :Tags<CR>
nmap <Leader>f :Files<CR>
nmap <Leader>a :Ag<CR>

" NerdTree configuration
map <F2> :NERDTreeToggle<CR>
let g:NERDTreeIgnore=['\~$', '__pycache__', '.git']

" VimWiki
let g:vimwiki_list = [{'path': '~/Documents/VimWiki/'}]

" }}}

" Functions{{{
function! StatuslineMode()
  let l:mode=mode()
  if l:mode==#"n"
    return "NORMAL"
  elseif l:mode==?"v"
    return "VISUAL"
  elseif l:mode==#"i"
    return "INSERT"
  elseif l:mode==#"R"
    return "REPLACE"
  elseif l:mode==?"s"
    return "SELECT"
  elseif l:mode==#"t"
    return "TERMINAL"
  elseif l:mode==#"c"
    return "COMMAND"
  elseif l:mode==#"!"
    return "SHELL"
  endif
endfunction
" }}}

" Filetype {{{
filetype indent on
filetype plugin on
set autoindent
" }}}

" Colors {{{
syntax enable           " enable syntax processing
colorscheme solarized
" set termguicolors
" }}}

" UI Layout {{{
set number              " show line numbers
set showcmd             " show command in bottom bar
" set cursorline          " highlight current line
set wildmenu
set lazyredraw
set showmatch           " higlight matching parenthesis

" Show a line at 100 columns
set textwidth=100
set colorcolumn=+1

" Set up the statusline.
set statusline=\ %n\ 
set statusline+=%1*\ %f\ %m\ %r\ 
set statusline+=%2*\ %{FugitiveStatusline()}\  
set statusline+=%9*\ "%{StatuslineMode()}
set statusline+=%=
set statusline+=%y\ %{&fileencoding?&fileencoding:&encoding}\ [%{&fileformat}]\ 
set statusline+=%2*\ Column\ %c\ 
set statusline+=%1*\ Line\ %l/%L\ (%P)
set laststatus=2
hi User1 ctermbg=darkblue ctermfg=white guibg=darkblue guifg=white
hi User2 ctermbg=magenta ctermfg=white guibg=magenta guifg=white
hi User9 ctermbg=black ctermfg=white guibg=black guifg=white

" Set up cursor line highlighting in insert mode.
augroup _cursor_mode
    autocmd!
    autocmd InsertEnter,InsertLeave * set cursorline!
augroup END

" }}}


" vim: foldmethod=marker:foldlevel=0
