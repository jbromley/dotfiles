# Arduino
[language-server.arduino-language-server]
command = "arduino-language-server"
args = ["-log", "-logpath", "/tmp"]

[[language]]
name = "arduino"
scope = "source.arduino"
injection-regex = "arduino"
file-types = ["ino"]
roots = ["sketch.yaml"]
comment-tokens = "//"
block-comment-tokens = {start = "/*", end = "*/"}
indent = {tab-width = 2, unit = "  "}
formatter = {command = "clang-format" , args = ["--style=llvm", "%{buffer_name}"]}
language-servers = ["arduino-language-server"]

[[grammar]]
name = "arduino"
source = {git = "https://github.com/tree-sitter-grammars/tree-sitter-arduino", rev = "ce02903e3ae74c729e9415dc32c276447b1c8afd"}

# C++
[[language]]
name = "cpp"
file-types = ["cc", "hh", "c++", "cpp", "hpp", "h", "ipp", "tpp", "cxx", "hxx", "ixx", "txx", "C", "H", "cu", "cuh", "cppm", "h++", "ii", "inl", { glob = ".hpp.in" }, { glob = ".h.in" }]
comment-token = ["//", "///", "//!"]
block-comment-tokens = [{start = "/*", end = "*/"}, {start = "/**", end = "*/"}, {start = "/*!", end = "*/"}]
auto-format = false
formatter = {command = "clang-format", args=["--style=file"]}

[language-server.clangd]
command = "clangd"

# Elixir
[language-server.expert]
command = "expert"

[[language]]
name = "elixir"
language-servers = [ "elixir-ls" ]
text-width = 100
rulers = [100]

[language-server.elixir-ls.config]
config = {elixirLS.dialyzerEnabled = true}

# Python
[[language]]
name = "python"
auto-format = false
rulers = [88]

# Bash
[[language]]
name="bash"
indent = {tab-width = 4, unit = "    "}
formatter = {command = "shfmt", args = ["-i", "4", "-"]}

# Haskell
[[language]]
name = "haskell"
auto-format = true
formatter = {command = "hindent", args = ["--line-length", "100"]}

# Markdown
[[language]]
name = "markdown"
formatter = {command = "dprint", args = ["fmt", "--stdin", "md"]}
auto-format = false
rulers = [80]

# XML
[language-server.lemminx]
command = "lemminx"

[[language]]
name = "xml"
language-servers = ["lemminx"]
file-types = ["xml", "mobileconfig", "plist", "xib", "storyboard", "svg", "xsd", "gml", "xaml", "gir", "xacro"]

# YAML
[[language]]
name = "yaml"
file-types = ["yml", "yaml", "rviz"]
formatter = {command = "dprint", args = ["fmt", "--stdin", "yaml"]}
auto-format = false

# JSON
[language-server]
vscode-json-languageserver = { command = "vscode-json-languageserver", args = ["--stdio"], config = { provideFormatter = true, json = { validate = { enable = true } } } }

[[language]]
name = "json"
language-servers = [ "vscode-json-languageserver" ]

[[language]]
name = "sql"
language-servers = [ "pgtools" ]
auto-format = true
roots = [ "postgrestools.jsonc", ".git" ]
file-types = [ "sql" ]

[language.indent]
tab-width = 2
unit = "  "

[language-server.pgtools]
command = "postgrestools"
args = [ "lsp-proxy" ]
timeout = 10
