# Arduino
[language-server.arduino-language-server]
command = "arduino-language-server"
args = ["-log", "-logpath", "/tmp"]

[[language]]
name = "arduino"
scope = "source.arduino"
injection-regex = "arduino"
file-types = ["ino"]
roots = ["sketch.yaml"]
comment-tokens = "//"
block-comment-tokens = {start = "/*", end = "*/"}
indent = { tab-width = 2, unit = "  " }
formatter = { command = "clang-format" , args = ["--style=llvm", "%{buffer_name}"]}
language-servers = [ "arduino-language-server" ]

[[grammar]]
name = "arduino"
source = { git = "https://github.com/tree-sitter-grammars/tree-sitter-arduino", rev = "ce02903e3ae74c729e9415dc32c276447b1c8afd" }

# C++
[[language]]
name = "cpp"
file-types = ["cc", "hh", "c++", "cpp", "hpp", "h", "ipp", "tpp", "cxx", "hxx", "ixx", "txx", "C", "H", "cu", "cuh", "cppm", "h++", "ii", "inl", { glob = ".hpp.in" }, { glob = ".h.in" }]
comment-token = ["//", "///", "//!"]
block-comment-tokens = [{start = "/*", end = "*/"}, {start = "/**", end = "*/"}, {start = "/*!", end = "*/"}]
auto-format = false
formatter = {command = "clang-format", args=["--style=file"]}

[language-server.clangd]
command = "clangd"

# Elixir
[[language]]
name = "elixir"
text-width = 100

[language-server.elixir-ls.config]
config = { elixirLS.dialyzerEnabled = true }

# Python
[[language]]
name = "python"
auto-format = true

# Haskell
[[language]]
name = "haskell"
auto-format = true
formatter = {command = "hindent", args = ["--line-length", "100"]}

# XML
[[language]]
name = "xml"
file-types = ["xml", "mobileconfig", "plist", "xib", "storyboard", "svg", "xsd", "gml", "xaml", "gir", "xacro"]

# YAML
[[language]]
name = "yaml"
file-types = ["yml", "yaml", "rviz"]

# LSP-AI
[language-server.lsp-ai]
command = "lsp-ai"

[language-server.lsp-ai.config.memory]
file_store = { }

[language-server.lsp-ai.config.models.openai-gpt5]
type = "openai"
chat_endpoint = "https://api.openai.com/v1/responses"
model = "gpt-5"
auth_token_env_var_name = "ANTHROPIC_API_KEYsk-proj-SpTAOVkCH7CzMB10XXF6A4GMPKLDLSzSny7tWxiBwxXp2vNNMWmhyTQFUMD3mVjS-rs07k_H1sT3BlbkFJ06cF-EzU9ohvnWQBFwDOMuaS66fRXv3d9s1qYv5O24PIsQeMe3gYCpVtn52hA5VrEHKphBdu0A"

[[language-server.lsp-ai.config.chat]]
trigger = "!C"
action_display_name = "Chat"
model = "openai-gpt5"

[language-server.lsp-ai.config.chat.parameters]
max_context = 4096
max_tokens = 1024
system = "You are a code assistant chatbot. The user will ask you for assistance coding and you will do you best to answer succinctly and accurately"

# Every file type we intend to chat in needs to have lsp-ai enabled
[[language]]
name = "markdown"
language-servers = ["lsp-ai"]


