#!/usr/bin/env bash
#######################################################################
#                            BEGIN CONFIG                             #
#######################################################################

# Use a custom lock script
# LOCK_CMD="/home/jay/.local/bin/fuzzylock.sh"
LOCK_CMD="i3lock -e -f -i /tmp/lockscreen.png"

# Colors: FG (foreground), BG (background), HL (highlighted)
FG_COLOR="#bbbbbb"
BG_COLOR="#111111"
HLFG_COLOR="#111111"
HLBG_COLOR="#bbbbbb"
BORDER_COLOR="#222222"

# Options not related to colors
ROFI_TEXT="Menu"
ROFI_OPTIONS=(-columns 1 -lines 8 -sep solid -width -11 -location 0 -hide-scrollbar -bw 2)

#######################################################################
#                             END CONFIG                              #
#######################################################################

# Whether to ask for user's confirmation
enable_confirmation=false

usage="$(basename "$0") [-h] [-c] [-p name] -- display a menu for shutdown, reboot, lock etc.

where:
    -h  show this help text
    -c  ask for user confirmation"

# Parse CLI arguments
while getopts "hcp:" option; do
    case "${option}" in
	h) echo "${usage}"
	   exit 0
	   ;;
	c) enable_confirmation=true
	   ;;
	*) exit 1
	   ;;
    esac
done

# Check whether a command exists
function command_exists() {
    command -v "$1" &> /dev/null 2>&1
}

# systemctl required
if ! command_exists systemctl ; then
    echo "Error: systemctl not found!"
    exit 1
fi

# menu defined as an associative array
declare -a menu
declare -a cmds

# Menu with keys/commands
menu=(Lock Logout Suspend Reboot Shutdown Cancel)
cmds=("${LOCK_CMD}" "i3-msg exit" "systemctl suspend" "systemctl reboot" "systemctl poweroff")
menu_nrows=${#menu[@]}

# Menu entries that may trigger a confirmation message
menu_confirm="Shutdown Reboot Suspend"

launcher_exe="rofi"
launcher_options=(-dmenu -i -lines "${menu_nrows}" -p "${ROFI_TEXT}" \
				 "${rofi_colors}" "${ROFI_OPTIONS[@]}")
rofi_colors=(-bc "${BORDER_COLOR}" -bg "${BG_COLOR}" -fg "${FG_COLOR}" \
			 -hlfg "${HLFG_COLOR}" -hlbg "${HLBG_COLOR}")

launcher=(${launcher_exe} "${launcher_options[@]}")
selection="$(printf '%s\n' "${menu[@]}" | "${launcher[@]}")"

function ask_confirmation() {
    confirmed=$(echo -e "Yes\nNo" | rofi -dmenu -i -lines 2 -p "${selection}?" \
					 "${rofi_colors}" "${ROFI_OPTIONS[@]}")
    [ "${confirmed}" == "Yes" ] && confirmed=0

    if [ "${confirmed}" == 0 ]; then
	i3-msg -q "exec ${menu[${selection}]}"
    fi
}

function get_index() {
    local value
    declare -a a
    value="$1"
    shift
    a=($@)
    for i in "${!a[@]}"; do
	if [[ "${a[$i]}" = "${value}" ]]; then
	    echo "${i}";
	    break
	fi
    done
}

if [[ $? -eq 0 && ! -z ${selection} ]]; then
    if [[ "${enable_confirmation}" = true && \
              ${menu_confirm} =~ (^|[[:space:]])"${menu[${selection}]}"($|[[:space:]]) ]]; then
	ask_confirmation
    else
	cmdindex=$(get_index "${selection}" "${menu[@]}")
	i3-msg -q "exec ${cmds[${cmdindex}]}"
    fi
fi
